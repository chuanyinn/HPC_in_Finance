Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main())


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at example1.cpp(11,4)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

    Report from: Code generation optimizations [cg]

example1.cpp(7,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
example1.cpp(8,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
example1.cpp(5,1):remark #34051: REGISTER ALLOCATION : [main] example1.cpp:5

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rsi rdi zmm0-zmm9]
        
    Routine temporaries
        Total         :      40
            Global    :      10
            Local     :      30
        Regenerable   :      10
        Spilled       :       0
        
    Routine stack
        Variables     :      36 bytes*
            Reads     :       6 [1.07e+01 ~ 10.7%]
            Writes    :       4 [7.14e+00 ~ 7.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
